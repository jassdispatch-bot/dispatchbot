from flask import Flask, request
import os
import openai
import telegram
from telegram import Bot

app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = Bot(token=TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_state = {}

@app.route(f"/{TELEGRAM_TOKEN}", methods=["POST"])
def respond():
    update_data = request.get_json(force=True)
    if not update_data:
        return "no update", 400

    update = telegram.Update.de_json(update_data, bot)
    if not update.message or not update.message.text:
        return "no message text", 200

    text = update.message.text.strip()
    chat_id = update.message.chat.id

    if chat_id not in user_state:
        user_state[chat_id] = {"stage": "start"}

    state = user_state[chat_id]

    # –≠—Ç–∞–ø 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    if state["stage"] == "start":
        bot.send_message(chat_id=chat_id, text="Hi! üëã I'm JassDispatch ‚Äî your AI freight dispatcher.\n\u041f\u0440\u0438\u0432\u0435\u0442! –Ø JassDispatch ‚Äî —Ç–≤–æ–π –ê–∏-–¥–∏—Å–ø–µ—Ç—á–µ—Ä.")
        bot.send_message(chat_id=chat_id, text="Please choose your language / –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —è–∑—ã–∫:\nEnglish –∏–ª–∏ –†—É—Å—Å–∫–∏–π")
        state["stage"] = "language"
        return "ok"

    # –≠—Ç–∞–ø 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞
    if state["stage"] == "language":
        if "ru" in text.lower() or "—Ä—É—Å" in text.lower():
            state["lang"] = "ru"
        else:
            state["lang"] = "en"
        bot.send_message(chat_id=chat_id, text="Are you a truck driver or a broker?\n–¢—ã –≤–æ–¥–∏—Ç–µ–ª—å —Ç—Ä–∞–∫–∞ –∏–ª–∏ –±—Ä–æ–∫–µ—Ä?")
        state["stage"] = "role"
        return "ok"

    # –≠—Ç–∞–ø 3: –†–æ–ª—å
    if state["stage"] == "role":
        if "broker" in text.lower() or "–±—Ä–æ–∫–µ—Ä" in text.lower():
            state["role"] = "broker"
        else:
            state["role"] = "driver"
        bot.send_message(chat_id=chat_id, text="Got it! üöÄ\nNow tell me what you need. / –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ.")
        state["stage"] = "prompt"
        return "ok"

    # –≠—Ç–∞–ø 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
    if state["stage"] == "prompt":
        lang = state.get("lang", "en")
        role = state.get("role", "driver")
        user_message = text

        # –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç
        base_prompt = {
            "ru": f"""–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –æ–ø—ã—Ç–Ω—ã–π –ª–æ–≥–∏—Å—Ç-–¥–∏—Å–ø–µ—Ç—á–µ—Ä —Å 10-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º.
–¢—ã —Å–≤–æ–±–æ–¥–Ω–æ –≥–æ–≤–æ—Ä–∏—à—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –æ—Ç–ª–∏—á–Ω–æ –∑–Ω–∞–µ—à—å –≤—Å–µ –Ω—é–∞–Ω—Å—ã –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–æ–∫ –ø–æ –°–®–ê ‚Äî –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –º–∞—Ä—à—Ä—É—Ç—ã, —Å—Ç–∞–≤–∫–∏, —Ä–µ–∞–ª–∏–∏ –±—Ä–æ–∫–µ—Ä–æ–≤ –∏ –≥—Ä—É–∑–æ–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π.
–¢—ã —á–µ—Å—Ç–Ω—ã–π, –≥—Ä–∞–º–æ—Ç–Ω—ã–π –∏ —É–º–µ–µ—à—å –¥–æ–Ω–æ—Å–∏—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏, —É–º–µ–µ—à—å —É–±–µ–∂–¥–∞—Ç—å, –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∏ —Å—Ç–∞–≤–∏—Ç—å —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—É—é –º–∞—Ä–∂—É.
–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {role.upper()}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª: \"{user_message}\"\n""",
            "en": f"""Imagine you are a seasoned freight dispatcher with 10 years of experience in the U.S.
You speak English and Russian fluently and understand all U.S. trucking laws, broker policies, and route planning.
User role: {role.upper()}
The user said: \"{user_message}\"\n"""
        }

        if role == "driver":
            base_prompt["ru"] += "–ï—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –ø–æ –≥—Ä—É–∑—É ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ 2-3 –º–∞—Ä—à—Ä—É—Ç–∞ —Å –≥–æ—Ä–æ–¥–∞–º–∏, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º, —Ç–∏–ø–æ–º –≥—Ä—É–∑–∞ –∏ —Å—Ç–∞–≤–∫–æ–π."
            base_prompt["en"] += "If it's a freight request ‚Äî suggest 2-3 realistic routes with cities, mileage, cargo type, and rate."
        else:
            base_prompt["ru"] += "–ï—Å–ª–∏ —ç—Ç–æ –±—Ä–æ–∫–µ—Ä ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –≥—Ä–∞–º–æ—Ç–Ω—ã–π, –¥–µ–ª–æ–≤–æ–π —Ç–µ–∫—Å—Ç."
            base_prompt["en"] += "If it's a broker message ‚Äî generate a convincing, professional message in business tone."

        try:
            completion = openai.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[{"role": "user", "content": base_prompt[lang]}]
            )
            response_text = completion.choices[0].message.content.strip()
            bot.send_message(chat_id=chat_id, text=response_text)
        except Exception as e:
            bot.send_message(chat_id=chat_id, text="Something went wrong. Please try again later.")
            print(f"OpenAI API Error: {e}")

        return "ok"
